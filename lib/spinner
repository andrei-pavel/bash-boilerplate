#!/bin/bash

# Copyright (C) 2017-2019 Andrei Pavel, andrei.pavel@cti.pub.ro
# Licensed under the MIT License
#
# Warning! Nested spinners are not supported.

# Source guard
[[ -n "${_LIB_SPINNER_SOURCED+x}" ]] && return 0
export _LIB_SPINNER_SOURCED=true

. "$(dirname "${BASH_SOURCE[0]}")/traps"

function _spinner_cycle () {
  _cycle=(
    '[●   ]'
    '[ ●  ]'
    '[  ● ]'
    '[   ●]'
    '[  ● ]'
    '[ ●  ]'
  )
  if [[ -z "${1+x}" ]]; then
    printf '%d' "${#_cycle[@]}"
  else
    printf '%s' "${_cycle[${1}]}"
  fi
}
export -f _spinner_cycle
export _spinner_period='0.15s'

if command -v tput &> /dev/null; then
  if tput cvvis &> /dev/null; then
    function _tput() {
      tput "${@}"
    }
  elif tput -T 'xterm' cvvis &> /dev/null; then
    function _tput() {
      tput -T 'xterm' "${@}"
    }
  else
    function _tput() {
      :
    }
  fi
else
  function _tput() {
    :
  }
fi
export -f _tput

function _display_message() {
  local mode=${1-}
  local status=${2-}
  if [[ "${mode}" = 'spinning' ]]; then
    status="$(_spinner_cycle $(( _i % $(_spinner_cycle) )) )"
    (( ++_i ))
  fi
  if [[ "${mode}" != 'first' ]]; then
    printf '\e[1A'
  fi
  printf "\\r%s%$(($(_tput cols)-${#_message}-8))s${status}\\n" "${_message}"
}
export -f _display_message

function _spinner {
  case ${1-} in
    start)
      _tput civis
      export _i=0
      while true; do
        _display_message 'spinning'
        sleep ${_spinner_period}
      done
      ;;

    stop)
      [[ -z "${_spinner_pid+x}" ]] && return 1
      kill "${_spinner_pid}" > /dev/null 2>&1
      local status
      if (( ${2-0} == 0 )); then
        status="${GREEN}DONE${RESET}"
      else
        status="${GREEN}FAIL${RESET}"
      fi
      _display_message 'status' "[${status}]"
      ;;

    *)
      printf 'ERROR: invalid argument, try {start/stop}' >&2
      exit 2
      ;;
  esac
}
export -f _spinner

function are-spinners-enabled() {
  [[ -z "${SPINNERS_ENABLED+x}" || "${SPINNERS_ENABLED}" = true ]]
}
export -f are-spinners-enabled

function start-spinner() {
  if [[ "${-}" = *x* || -n "${_spinner_pid+x}" ]] || ! are-spinners-enabled; then
    return
  fi
  export _message="${1-}"
  _display_message 'first'
  _spinner 'start' &
  _buffer="$(mktemp)"
  export _buffer
  exec 3>&1 1>"${_buffer}" 2>&1
  export _spinner_pid="${!}"
  disown
}
export -f start-spinner

function stop-spinner() {
  _tput cvvis
  if [[ "${-}" = *x* || -z "${_spinner_pid+x}" ]] || ! are-spinners-enabled; then
    return
  fi
  exec 1>&3
  _spinner 'stop' "${1-0}"
  unset _spinner_pid
  cat "${_buffer}"
  rm "${_buffer}"
}
export -f stop-spinner

function disable-spinners() {
  export SPINNERS_ENABLED=false
}
export -f disable-spinners

function enable-spinners() {
  export SPINNERS_ENABLED=true
}
export -f enable-spinners
