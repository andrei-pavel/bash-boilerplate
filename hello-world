#!/bin/bash

# Copyright (C) 2017-2019 Andrei Pavel, andrei.pavel@cti.pub.ro
# Licensed under the MIT License

# Header
ARGUMENTS="\
  [-a|--approval]              whether to ask user for approval
  [-y|--yaml]                  specify path to the configuration file
  -n \$count                    print \$count times
  [\$string]                    something other than \"Hello, world!\" to print
"
SCRIPT_PATH="$(dirname "$(readlink -f "${0}")")"
. "${SCRIPT_PATH}/lib/header"
. "${SCRIPT_PATH}/lib/utils"
. "${SCRIPT_PATH}/lib/spinner"
. "${SCRIPT_PATH}/lib/traps"

# Parse arguments.
while (( ${#} > 0 )); do
  case "${1}" in
  # [-a|--approval]              whether to ask user for approval
  '-a'|'--approval') approval_required=true ;;
  # [-y|--yaml]                specify path to the configuration file
  '-y'|'--yaml') shift && yaml=${1} ;;
  # -n \$count                    print \$count times
  '-n') shift && count=${1} ;;
  *)
    # [\$string]                    something other than \"Hello, world!\" to print
    [[ -z "${string+x}" ]] && string="${1}" && shift && continue
    # Unrecognized argument
    printf "${RED}ERROR: Unrecognized argument '%s'${RESET}\\n" "${1}" 1>&2; print-usage; exit 1 ;;
  esac; shift
done

mandatory count

# Default arguments
[[ -z "${approval_required+x}" ]] && approval_required=false
[[ -z "${string+x}" ]] && string="Hello, world!"

#------------------------------------------------------------------------------#

if ${approval_required} && ! confirm; then
  exit 0
fi

if [[ -n "${yaml+x}" ]]; then
  if command -v yq &> /dev/null; then
    start-spinner "Printing entries from ${yaml}..."
    for (( i = 0; i < count; ++i )); do
      yq -r '.data | to_entries | map(select(.value != null) | "\(.key) \(.value)") | .[]' < "${yaml}"
    done
    stop-spinner ${?}
  else
    printf 'yq is required to read %s. Skipping...' "${yaml}" >&2
  fi
else
  start-spinner 'Printing...'
  for (( i = 0; i < count; ++i )); do
    printf '%s\n' "${string}"
  done
  stop-spinner ${?}
fi

disable-spinners
stop-spinner
start-spinner 'Go crazy here!'
start-spinner 'Even order doesn''t count.'
start-spinner 'Spinners are off.'
enable-spinners

if [[ -n "${this+x}" ]]; then
  printf 'this %s\n' "${this}"
fi
